{
  "name": "snake-zone-api",
  "version": "1.0.0",
  "description": "Multiplayer Snake Zone game with real-time communication",
  "main": "dist/server.js",
  "scripts": {
    "test": "playwright test tests/starter-join-game-test.spec.ts --headed",
    "zip-build": "node script/zip-build.mjs",
    "start-client": "cd client && npm run dev",
    "build-client": "cd client && npm run build && cd .. && npm run zip-build",
    "build-client-prod": "cd client && build-prod && cd .. && npm run zip-build",
    "start-server": "node server/server.js",
    "start": "cross-env NODE_ENV=production node dist/server.js",
    "build": "npm run clean && esbuild server/server.js --bundle --minify --platform=node --outfile=dist/server.js",
    "clean": "rimraf dist",
    "kill-dev": "kill-port 9000 5174",
    "dev": "npm run kill-dev && concurrently \"nodemon server/server.js\" \"npm run start-client\"",
    "docker:build": "docker build -t snake-zone-server .",
    "docker:run": "docker run -p 9000:9000 --name snake-zone-container snake-zone-server",
    "docker:stop": "docker stop snake-zone-container",
    "docker:remove": "docker rm snake-zone-container",
    "docker:logs": "docker logs snake-zone-container",
    "compose:up": "docker-compose up -d",
    "compose:down": "docker-compose down",
    "compose:logs": "docker-compose logs -f",
    "compose:build": "docker-compose build",
    "compose:prod": "docker-compose --profile production up -d"
  },
  "dependencies": {
    "express": "^4.18.2",
    "msgpack5": "^6.0.2",
    "socket.io": "^4.8.1",
    "dotenv": "^16.4.5"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "concurrently": "^9.2.0",
    "cross-env": "^10.1.0",
    "esbuild": "^0.25.10",
    "kill-port": "^2.0.1",
    "nodemon": "^3.0.1",
    "rimraf": "^6.0.1",
    "zip-a-folder": "^3.1.9"
  },
  "keywords": [
    "multiplayer",
    "game",
    "websocket",
    "realtime"
  ],
  "author": ""
}
